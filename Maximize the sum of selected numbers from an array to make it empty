class Solution{
    public:
    int maximizeSum(int a[], int n) 
    {
        
        
        int ans=0;
    unordered_map<int,int> freq;
    
    for(int i=0;i<n;i++)
    freq[a[i]]++;
    
    for(int i=n-1; i>=0 ;i--){
        if(freq[a[i]]>0)
        {
            if(freq[a[i]-1]>0 )
            freq[a[i]-1]--;
            
            ans+=a[i];
            freq[a[i]]--;
        }
    }
    return ans;
        
        
        
        
        
        
        
        
        
        
        
        // Complete the function
        // sort(a,a+n);
        // int sum=0;
        // for(int i=n-1;i>=0;i--){
        //     if(i>0 && a[i-1]==a[i]-1){
        //         sum+=a[i];
        //         i--;
        //     }
        //     else{
        //         sum+=a[i];
        //     }
        // }
        // return sum;
        
        
        // sort(arr,arr+n);
        
        // // for(int i=0;i<n;i++)
        // // cout<<arr[i]<<" ";
        // // cout<<endl;
        
        // int s=0;
        // for(int i=n-1;i>=0;){
            
        //     while(i>0 && arr[i]==arr[i-1]){
        //         s+=arr[i--];
        //     }
            
        //     if(i>0 && (arr[i]-arr[i-1]==1)){
        //         s+=arr[i];
        //         i-=2;
        //     }
        //     else{
        //         s+=arr[i--];
        //     }
            
        // }
        // return s;
    }

};
